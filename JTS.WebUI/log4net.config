<?xml version="1.0" encoding="utf-8"?>
<log4net>
  <!--log4net日志组件配置文件-->

  <!-- 信息日志类 -->
  <logger name="loginfo">
    <level value="ALL" />
    <appender-ref ref="InfoAppender" />
  </logger>
  
  <!-- 错误日志类-->
  <logger name="logerror">
    <level value="ALL" />
    <appender-ref ref="ErrorAppender" />
  </logger>

  <!-- 数据库操作日志类 -->
  <logger name="logdb">
    <level value="ALL" />
    <appender-ref ref="DBAppender" />
  </logger>

  <!--将信息日志以回滚文件的形式写到文件中。-->
  <appender name="InfoAppender" type="log4net.Appender.RollingFileAppender">
    <!--日志文件路径-->
    <param name="File" value="Logs\\info\\" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <param name="appendToFile" value="true" />
    <!--最小锁定模型以允许多个进程可以写入同一个文件-->
    <param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />
    <!--变换的形式为日期，这种情况下每天只有一个日志-->
    <!--此时MaxSizeRollBackups和maximumFileSize的节点设置没有意义-->
    <!--创建新文件的方式，可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite-->
    <param name="RollingStyle" value="Date" />
    <!--日期的格式-->
    <!--以时间周期变换日志文件名，每分钟都改变日志的文件名--> 
    <param name="DatePattern" value="yyyyMMdd&quot;.html&quot;" />
    <!--最大变换数量，如果超过这个数量则从第一个文件开始复写.备份日志数目，默认为0。在CountDirection为负数时有效。-->
    <!--<maxSizeRollBackups value="100"/>-->
    <!--默认值为-1。
    当文件超过MaximumFileSize的大小时，如果要创建新的文件来存储日志，会根据CountDirection的值来重命名文件。
    大于-1的值时，file里指定的文件名会依次加上.0,.1,.2递增。当等于或小于-1时，创建依赖于MaxSizeRollBackups参数值，创建备份日志数。-->
    <!--<countDirection value="-1"/>-->

    <!--最大文件大小，支持KB,MB,GB-->
    <!--当RollingStyle为Composite或Size，这里设置最大文件大小（可以KB，MB，GB为单位，默认为字节）-->
    <!--<maximumFileSize value="200GB"/>-->
    <!--True/false，默认为true。为true时，RollingStyler的date值将无效。且为true时，需要在file里指定文件名，所有日志都会记录在这个文件里。-->
    <param name="StaticLogFileName" value="false" />
    <!-- 信息日志布局-->
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="%n【时间】：%d [线程ID:%t 级别:%p 对象:%c  行号:%L ]  &lt;BR&gt;%n【消息】：%m %n &lt;HR Size=1&gt;"  />
    </layout> 
  </appender>
  
  
  <!--将错误日志以回滚文件的形式写到文件中。-->
  <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
    <!--日志文件路径-->
    <param name="File" value="Logs\\error\\" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <param name="appendToFile" value="true" />
    <!--最小锁定模型以允许多个进程可以写入同一个文件-->
    <param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />
    <!--变换的形式为日期，这种情况下每天只有一个日志-->
    <!--此时MaxSizeRollBackups和maximumFileSize的节点设置没有意义-->
    <!--创建新文件的方式，可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite-->
    <param name="RollingStyle" value="Date" /> 
    <!--日期的格式-->
    <!--以时间周期变换日志文件名，每分钟都改变日志的文件名-->
    <param name="DatePattern" value="yyyyMMdd&quot;.html&quot;" />
    <!--最大变换数量，如果超过这个数量则从第一个文件开始复写.备份日志数目，默认为0。在CountDirection为负数时有效。-->
    <!--<maxSizeRollBackups value="100"/>-->
    <!--默认值为-1。
    当文件超过MaximumFileSize的大小时，如果要创建新的文件来存储日志，会根据CountDirection的值来重命名文件。
    大于-1的值时，file里指定的文件名会依次加上.0,.1,.2递增。当等于或小于-1时，创建依赖于MaxSizeRollBackups参数值，创建备份日志数。-->
    <!--<countDirection value="-1"/>-->

    <!--最大文件大小，支持KB,MB,GB-->
    <!--当RollingStyle为Composite或Size，这里设置最大文件大小（可以KB，MB，GB为单位，默认为字节）-->
    <!--<maximumFileSize value="200GB"/>-->

    <!--True/false，默认为true。为true时，RollingStyler的date值将无效。且为true时，需要在file里指定文件名，所有日志都会记录在这个文件里。-->
    <param name="StaticLogFileName" value="false" />
    <!-- 信息日志布局 &lt;HR COLOR=blue&gt;-->
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="%n【错误时间】：%d [线程ID:%t 级别:%p 对象:%c  行号:%L ]  &lt;BR&gt;%n【错误消息】：%m %n &lt;HR Size=1&gt;"  />
    </layout>
  </appender>

  <!--将数据库执行日志以回滚文件的形式写到文件中。-->
  <appender name="DBAppender" type="log4net.Appender.RollingFileAppender">
    <!--日志文件路径-->
    <param name="File" value="Logs\\db\\" />
    <!--是否追加到文件,默认为true，通常无需设置-->
    <param name="appendToFile" value="true" />
    <!--最小锁定模型以允许多个进程可以写入同一个文件-->
    <param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />
    <!--变换的形式为日期，这种情况下每天只有一个日志-->
    <!--此时MaxSizeRollBackups和maximumFileSize的节点设置没有意义-->
    <!--创建新文件的方式，可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite-->
    <param name="RollingStyle" value="Date" />
    <!--日期的格式-->
    <!--以时间周期变换日志文件名，每天都改变日志的文件名-->
    <param name="DatePattern" value="yyyyMMdd&quot;.html&quot;" />
    <!--最大变换数量，如果超过这个数量则从第一个文件开始复写.备份日志数目，默认为0。在CountDirection为负数时有效。-->
    <!--<maxSizeRollBackups value="100"/>-->
    <!--默认值为-1。
    当文件超过MaximumFileSize的大小时，如果要创建新的文件来存储日志，会根据CountDirection的值来重命名文件。
    大于-1的值时，file里指定的文件名会依次加上.0,.1,.2递增。当等于或小于-1时，创建依赖于MaxSizeRollBackups参数值，创建备份日志数。-->
    <!--<countDirection value="-1"/>-->

    <!--最大文件大小，支持KB,MB,GB-->
    <!--当RollingStyle为Composite或Size，这里设置最大文件大小（可以KB，MB，GB为单位，默认为字节）-->
    <!--<maximumFileSize value="200GB"/>-->
    <!--True/false，默认为true。为true时，RollingStyler的date值将无效。且为true时，需要在file里指定文件名，所有日志都会记录在这个文件里。-->
    <param name="StaticLogFileName" value="false" />
    <!-- 信息日志布局-->
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="%n【时间】：%d [线程ID:%t 级别:%p 对象:%c  行号:%L ]  &lt;BR&gt;%n【消息】：%m %n &lt;HR Size=1&gt;"  />
    </layout>
  </appender>
  
  
</log4net>

<!--其中layout节点的配置说明：
%m(message):输出的日志消息；
%n(newline):换行；
%d(datetime):输出当前语句运行的时刻；
%r(runtime):输出程序从运行到执行到当前语句时消耗的毫秒数；
%t(threadid):当前语句所在的线程ID ；
%p(priority): 日志的当前日志级别；
%c(class):当前日志对象的名称；
%L：输出语句所在的行号；
%F：输出语句所在的文件名；
%-10：表示最小长度为10，如果不够，则用空格填充；-->
